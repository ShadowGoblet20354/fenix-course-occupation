#!/bin/python

import requests
import json
from datetime import datetime
import argparse

course_ids = {'SD':  "846035542880512",
              'ES':  "846035542880731",
              'IA':  "846035542880601",
              'Comp':"846035542880642",
              'CG':  "846035542880469",
              'BD':  "846035542880592"}

parser = argparse.ArgumentParser(description="Get occupation data for a given course")
parser.add_argument("course", help="Course name abbreviation", type=str, choices=course_ids.keys())
parser.add_argument("-s", "--startswith", help="Show only results that start with given string")
parser.add_argument("-c", "--campus", help="Show only results with classes on the given campus", type=str, choices=["alameda", "tagus"])
parser.add_argument("-x", "--exclude", help="Show only results which don't contain given string", type=str)
parser.add_argument("-v", "--verbose", help="Show campus information next to each shift", action="store_true")
args = parser.parse_args()

target_id = course_ids[args.course]
fenix_req = requests.get("https://fenix.tecnico.ulisboa.pt/api/fenix/v1/courses/{}/schedule?academicTerm=2021/2022&lang=pt-PT".format(target_id))

if not args.campus is None and args.campus == "alameda":
    target_campus = "Alameda"
elif not args.campus is None and args.campus == "tagus":
    target_campus = "Taguspark"
else:
    target_campus = None

fenix_json = json.loads(fenix_req.text)
print(datetime.now().strftime("%Y-%m-%d %H:%M:%S\n"))


enrolled = 0
total = 0
for shift in fenix_json['shifts']:
    name = shift['name']
    if not args.startswith is None and not name.startswith(args.startswith):
        continue
    if not args.exclude is None and args.exclude in name:
        continue

    current = shift['occupation']['current']
    maximum = shift['occupation']['max']
    campus  = shift['rooms'][0]['topLevelSpace']['name']

    if not target_campus is None and target_campus != campus:
        continue

    enrolled += current
    total += maximum

    if args.verbose:
        print("{:6} - {:3}/{:3} ({})".format(name, current, maximum, campus))
    else:
        print("{:6} - {:3}/{:3}".format(name, current, maximum))

print("\nTotal  - {:3}/{:3}".format(enrolled, total))
